{"version":3,"sources":["eqc.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","bigFactory","Big","x","this","c","slice","parse","constructor","prototype","P","DP","RM","E_NEG","E_POS","format","dp","toE","rnd","push","join","toString","nL","isValid","test","throwErr","NaN","charAt","indexOf","replace","search","substring","rm","more","xc","unshift","pop","message","err","name","MAX_DP","MAX_POWER","abs","cmp","y","xNeg","yc","j","k","div","dvd","dvs","dvsL","dvsT","next","remI","dvsZ","dvdI","dvdL","rem","remL","q","qc","qi","digits","shift","eq","gt","gte","lt","lte","sub","minus","xLTy","b","plus","xe","ye","reverse","mod","yGTx","times","add","pow","one","isNeg","round","sqrt","estimate","approx","half","Math","mul","Array","valueOf","toJSON","str","strL","toExponential","toFixed","neg","pos","toPrecision","sd","define","amd",2,"process","getNanoSeconds","hrtime","loadTime","performance","now","hr","Date","getTime","_process",3,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","args","arguments","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask",4,"_interopRequireDefault","obj","__esModule","default","_LatexParser","_LatexParser2","_Logmon","eqc","Parser","addToWindow","windowInstance","console","log","window","./parsing/LatexParser","./utility_services/Logmon",5,"_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_IdGenerator","_IdGenerator2","MathObject","type","id","nextId","order","minussign","reduced","exponent","parent","MathComponent","depth","variable","../utility_services/IdGenerator",6,"_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_MathObject2","_MathObject3","MathBracketed","_MathObject","contentList","_this","getPrototypeOf","content","checkIfBracketsNeeded","latex","toLatex","isType","toLatexWithoutBrackets","../MathObject",7,"MathEquation","leftside","rightside","latexSide","side","string","stringSide",8,"_Orderer","_Orderer2","MathOperation","factorone","factortwo","firstfactor","operation","secondfactor","isfraction","registerComponent","setOrder","setParent","switchSign","first","second","../../utility_services/Orderer",9,"MathSymbol","command",10,"_big","_big2","MathTerm","parseFloat","power","parseInt","getValue","isTerm","FirstT","SecondT","getPossibleExponentValue","sec","variables","Variable","variablevalue","multiplyValue","checkSign","val","containsExponent","big.js",11,"MathBinomial","upper","lower",12,"MathFactorial","component",13,"MathProbabilty",14,"Evaluator","inputChar","signed","currentChar","lastChar","list",15,"_Logmon2","_Evaluator","_Evaluator2","_Logger","_Logger2","_MathEquation","_MathEquation2","_MathTerm","_MathTerm2","_MathOperation","_MathOperation2","_MathBracketed","_MathBracketed2","_MathSymbol","_MathSymbol2","_MathProbability","_MathProbability2","_MathBinomial","_MathBinomial2","_MathFactorial","_MathFactorial2","Logcal","getLogger","LatexParser","input","index","status","bad","resetLogs","start","setInput","equation","parseToChar","append","end","exitingChar","negative","getLastChar","getChar","isParsableComponent","parseNextComponent","isConjoinedMultiplication","createMultiplicationFromList","parseChar","parseSign","parseIfExponent","setExponent","currentlyParsed","parseIfWhitespace","isNext","parseProbability","parseTerm","parseCommand","splice","term","factorial","isNumeric","isAlpha","addAlphaCharToVariables","parseIfChar","parseCurlyBracketed","returnContentIfPossible","parseMultiplication","parseFraction","parseRoundBracketed","parseSum","parseBinomial","complement","skipToChar","symbol","_content","firstlist","secondlist","bracketed","mult","probability","varlist","binomial","alphaChar","requiredChar","isSign","isWhitespace","../math-components/basic/MathBracketed","../math-components/basic/MathEquation","../math-components/basic/MathOperation","../math-components/basic/MathSymbol","../math-components/basic/MathTerm","../math-components/probability/MathBinomial","../math-components/probability/MathFactorial","../math-components/probability/MathProbability","../utility_services/Logger","../utility_services/Logmon","./Evaluator",16,"Formulator","formulas",17,"IdGenerator","nextid",18,"Logger","undefined","_typeof","Symbol","iterator","_Formulator","_Formulator2","msg","stepName","formula","formulaName","variation","getFormulaByName","variations","./Formulator",19,"Logmon","_performanceNow","_performanceNow2","windowRef","loggers","testing","consoling","logger","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","map","size","currentIndent","indent","timer","testRunning","testLevel","level","what","where","timed","logged","asString","mockWindow","logmon","createLoggerWithOptions","performance-now",20,"Orderer","orders","orderobj","availableConversions","underConversion","locked","Equation","resetOrder","Location","Order","Component","sort","depths","nextInOrder","equationOrderobj","maxdepth","./Logger","./Logmon"],"mappings":"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","file":"eqc.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* big.js v3.1.3 https://github.com/MikeMcl/big.js/LICENCE */\r\n;(function (global) {\r\n    'use strict';\r\n\r\n/*\r\n  big.js v3.1.3\r\n  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n  https://github.com/MikeMcl/big.js/\r\n  Copyright (c) 2014 Michael Mclaughlin <M8ch88l@gmail.com>\r\n  MIT Expat Licence\r\n*/\r\n\r\n/***************************** EDITABLE DEFAULTS ******************************/\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places of the results of operations\r\n     * involving division: div and sqrt, and pow with negative exponents.\r\n     */\r\n    var DP = 20,                           // 0 to MAX_DP\r\n\r\n        /*\r\n         * The rounding mode used when rounding to the above decimal places.\r\n         *\r\n         * 0 Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n         * 1 To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n         * 2 To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n         * 3 Away from zero.                                  (ROUND_UP)\r\n         */\r\n        RM = 1,                            // 0, 1, 2 or 3\r\n\r\n        // The maximum value of DP and Big.DP.\r\n        MAX_DP = 1E6,                      // 0 to 1000000\r\n\r\n        // The maximum magnitude of the exponent argument to the pow method.\r\n        MAX_POWER = 1E6,                   // 1 to 1000000\r\n\r\n        /*\r\n         * The exponent value at and beneath which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: -7\r\n         * -1000000 is the minimum recommended exponent value of a Big.\r\n         */\r\n        E_NEG = -7,                   // 0 to -1000000\r\n\r\n        /*\r\n         * The exponent value at and above which toString returns exponential\r\n         * notation.\r\n         * JavaScript's Number type: 21\r\n         * 1000000 is the maximum recommended exponent value of a Big.\r\n         * (This limit is not enforced or checked.)\r\n         */\r\n        E_POS = 21,                   // 0 to 1000000\r\n\r\n/******************************************************************************/\r\n\r\n        // The shared prototype object.\r\n        P = {},\r\n        isValid = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        Big;\r\n\r\n\r\n    /*\r\n     * Create and return a Big constructor.\r\n     *\r\n     */\r\n    function bigFactory() {\r\n\r\n        /*\r\n         * The Big constructor and exported function.\r\n         * Create and return a new instance of a Big number object.\r\n         *\r\n         * n {number|string|Big} A numeric value.\r\n         */\r\n        function Big(n) {\r\n            var x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if (!(x instanceof Big)) {\r\n                return n === void 0 ? bigFactory() : new Big(n);\r\n            }\r\n\r\n            // Duplicate.\r\n            if (n instanceof Big) {\r\n                x.s = n.s;\r\n                x.e = n.e;\r\n                x.c = n.c.slice();\r\n            } else {\r\n                parse(x, n);\r\n            }\r\n\r\n            /*\r\n             * Retain a reference to this Big constructor, and shadow\r\n             * Big.prototype.constructor which points to Object.\r\n             */\r\n            x.constructor = Big;\r\n        }\r\n\r\n        Big.prototype = P;\r\n        Big.DP = DP;\r\n        Big.RM = RM;\r\n        Big.E_NEG = E_NEG;\r\n        Big.E_POS = E_POS;\r\n\r\n        return Big;\r\n    }\r\n\r\n\r\n    // Private functions\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of Big x in normal or exponential\r\n     * notation to dp fixed decimal places or significant digits.\r\n     *\r\n     * x {Big} The Big to format.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * toE {number} 1 (toExponential), 2 (toPrecision) or undefined (toFixed).\r\n     */\r\n    function format(x, dp, toE) {\r\n        var Big = x.constructor,\r\n\r\n            // The index (normal notation) of the digit that may be rounded up.\r\n            i = dp - (x = new Big(x)).e,\r\n            c = x.c;\r\n\r\n        // Round?\r\n        if (c.length > ++dp) {\r\n            rnd(x, i, Big.RM);\r\n        }\r\n\r\n        if (!c[0]) {\r\n            ++i;\r\n        } else if (toE) {\r\n            i = dp;\r\n\r\n        // toFixed\r\n        } else {\r\n            c = x.c;\r\n\r\n            // Recalculate i as x.e may have changed if value rounded up.\r\n            i = x.e + i + 1;\r\n        }\r\n\r\n        // Append zeros?\r\n        for (; c.length < i; c.push(0)) {\r\n        }\r\n        i = x.e;\r\n\r\n        /*\r\n         * toPrecision returns exponential notation if the number of\r\n         * significant digits specified is less than the number of digits\r\n         * necessary to represent the integer part of the value in normal\r\n         * notation.\r\n         */\r\n        return toE === 1 || toE && (dp <= i || i <= Big.E_NEG) ?\r\n\r\n          // Exponential notation.\r\n          (x.s < 0 && c[0] ? '-' : '') +\r\n            (c.length > 1 ? c[0] + '.' + c.join('').slice(1) : c[0]) +\r\n              (i < 0 ? 'e' : 'e+') + i\r\n\r\n          // Normal notation.\r\n          : x.toString();\r\n    }\r\n\r\n\r\n    /*\r\n     * Parse the number or string value passed to a Big constructor.\r\n     *\r\n     * x {Big} A Big number instance.\r\n     * n {number|string} A numeric value.\r\n     */\r\n    function parse(x, n) {\r\n        var e, i, nL;\r\n\r\n        // Minus zero?\r\n        if (n === 0 && 1 / n < 0) {\r\n            n = '-0';\r\n\r\n        // Ensure n is string and check validity.\r\n        } else if (!isValid.test(n += '')) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Determine sign.\r\n        x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n        // Decimal point?\r\n        if ((e = n.indexOf('.')) > -1) {\r\n            n = n.replace('.', '');\r\n        }\r\n\r\n        // Exponential form?\r\n        if ((i = n.search(/e/i)) > 0) {\r\n\r\n            // Determine exponent.\r\n            if (e < 0) {\r\n                e = i;\r\n            }\r\n            e += +n.slice(i + 1);\r\n            n = n.substring(0, i);\r\n\r\n        } else if (e < 0) {\r\n\r\n            // Integer.\r\n            e = n.length;\r\n        }\r\n\r\n        // Determine leading zeros.\r\n        for (i = 0; n.charAt(i) == '0'; i++) {\r\n        }\r\n\r\n        if (i == (nL = n.length)) {\r\n\r\n            // Zero.\r\n            x.c = [ x.e = 0 ];\r\n        } else {\r\n\r\n            // Determine trailing zeros.\r\n            for (; n.charAt(--nL) == '0';) {\r\n            }\r\n\r\n            x.e = e - i - 1;\r\n            x.c = [];\r\n\r\n            // Convert string to array of digits without leading/trailing zeros.\r\n            for (e = 0; i <= nL; x.c[e++] = +n.charAt(i++)) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n     * Called by div, sqrt and round.\r\n     *\r\n     * x {Big} The Big to round.\r\n     * dp {number} Integer, 0 to MAX_DP inclusive.\r\n     * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n     * [more] {boolean} Whether the result of division was truncated.\r\n     */\r\n    function rnd(x, dp, rm, more) {\r\n        var u,\r\n            xc = x.c,\r\n            i = x.e + dp + 1;\r\n\r\n        if (rm === 1) {\r\n\r\n            // xc[i] is the digit after the digit that may be rounded up.\r\n            more = xc[i] >= 5;\r\n        } else if (rm === 2) {\r\n            more = xc[i] > 5 || xc[i] == 5 &&\r\n              (more || i < 0 || xc[i + 1] !== u || xc[i - 1] & 1);\r\n        } else if (rm === 3) {\r\n            more = more || xc[i] !== u || i < 0;\r\n        } else {\r\n            more = false;\r\n\r\n            if (rm !== 0) {\r\n                throwErr('!Big.RM!');\r\n            }\r\n        }\r\n\r\n        if (i < 1 || !xc[0]) {\r\n\r\n            if (more) {\r\n\r\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                x.e = -dp;\r\n                x.c = [1];\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [x.e = 0];\r\n            }\r\n        } else {\r\n\r\n            // Remove any digits after the required decimal places.\r\n            xc.length = i--;\r\n\r\n            // Round up?\r\n            if (more) {\r\n\r\n                // Rounding up may mean the previous digit has to be rounded up.\r\n                for (; ++xc[i] > 9;) {\r\n                    xc[i] = 0;\r\n\r\n                    if (!i--) {\r\n                        ++x.e;\r\n                        xc.unshift(1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Remove trailing zeros.\r\n            for (i = xc.length; !xc[--i]; xc.pop()) {\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Throw a BigError.\r\n     *\r\n     * message {string} The error message.\r\n     */\r\n    function throwErr(message) {\r\n        var err = new Error(message);\r\n        err.name = 'BigError';\r\n\r\n        throw err;\r\n    }\r\n\r\n\r\n    // Prototype/instance methods\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the absolute value of this Big.\r\n     */\r\n    P.abs = function () {\r\n        var x = new this.constructor(this);\r\n        x.s = 1;\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     * 1 if the value of this Big is greater than the value of Big y,\r\n     * -1 if the value of this Big is less than the value of Big y, or\r\n     * 0 if they have the same value.\r\n    */\r\n    P.cmp = function (y) {\r\n        var xNeg,\r\n            x = this,\r\n            xc = x.c,\r\n            yc = (y = new x.constructor(y)).c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n            return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n        }\r\n\r\n        // Signs differ?\r\n        if (i != j) {\r\n            return i;\r\n        }\r\n        xNeg = i < 0;\r\n\r\n        // Compare exponents.\r\n        if (k != l) {\r\n            return k > l ^ xNeg ? 1 : -1;\r\n        }\r\n\r\n        i = -1;\r\n        j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for (; ++i < j;) {\r\n\r\n            if (xc[i] != yc[i]) {\r\n                return xc[i] > yc[i] ^ xNeg ? 1 : -1;\r\n            }\r\n        }\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ xNeg ? 1 : -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big divided by the\r\n     * value of Big y, rounded, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     */\r\n    P.div = function (y) {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            // dividend\r\n            dvd = x.c,\r\n            //divisor\r\n            dvs = (y = new Big(y)).c,\r\n            s = x.s == y.s ? 1 : -1,\r\n            dp = Big.DP;\r\n\r\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!Big.DP!');\r\n        }\r\n\r\n        // Either 0?\r\n        if (!dvd[0] || !dvs[0]) {\r\n\r\n            // If both are 0, throw NaN\r\n            if (dvd[0] == dvs[0]) {\r\n                throwErr(NaN);\r\n            }\r\n\r\n            // If dvs is 0, throw +-Infinity.\r\n            if (!dvs[0]) {\r\n                throwErr(s / 0);\r\n            }\r\n\r\n            // dvd is 0, return +-0.\r\n            return new Big(s * 0);\r\n        }\r\n\r\n        var dvsL, dvsT, next, cmp, remI, u,\r\n            dvsZ = dvs.slice(),\r\n            dvdI = dvsL = dvs.length,\r\n            dvdL = dvd.length,\r\n            // remainder\r\n            rem = dvd.slice(0, dvsL),\r\n            remL = rem.length,\r\n            // quotient\r\n            q = y,\r\n            qc = q.c = [],\r\n            qi = 0,\r\n            digits = dp + (q.e = x.e - y.e) + 1;\r\n\r\n        q.s = s;\r\n        s = digits < 0 ? 0 : digits;\r\n\r\n        // Create version of divisor with leading zero.\r\n        dvsZ.unshift(0);\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL++ < dvsL; rem.push(0)) {\r\n        }\r\n\r\n        do {\r\n\r\n            // 'next' is how many times the divisor goes into current remainder.\r\n            for (next = 0; next < 10; next++) {\r\n\r\n                // Compare divisor and remainder.\r\n                if (dvsL != (remL = rem.length)) {\r\n                    cmp = dvsL > remL ? 1 : -1;\r\n                } else {\r\n\r\n                    for (remI = -1, cmp = 0; ++remI < dvsL;) {\r\n\r\n                        if (dvs[remI] != rem[remI]) {\r\n                            cmp = dvs[remI] > rem[remI] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If divisor < remainder, subtract divisor from remainder.\r\n                if (cmp < 0) {\r\n\r\n                    // Remainder can't be more than 1 digit longer than divisor.\r\n                    // Equalise lengths using divisor with extra leading zero?\r\n                    for (dvsT = remL == dvsL ? dvs : dvsZ; remL;) {\r\n\r\n                        if (rem[--remL] < dvsT[remL]) {\r\n                            remI = remL;\r\n\r\n                            for (; remI && !rem[--remI]; rem[remI] = 9) {\r\n                            }\r\n                            --rem[remI];\r\n                            rem[remL] += 10;\r\n                        }\r\n                        rem[remL] -= dvsT[remL];\r\n                    }\r\n                    for (; !rem[0]; rem.shift()) {\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Add the 'next' digit to the result array.\r\n            qc[qi++] = cmp ? next : ++next;\r\n\r\n            // Update the remainder.\r\n            if (rem[0] && cmp) {\r\n                rem[remL] = dvd[dvdI] || 0;\r\n            } else {\r\n                rem = [ dvd[dvdI] ];\r\n            }\r\n\r\n        } while ((dvdI++ < dvdL || rem[0] !== u) && s--);\r\n\r\n        // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n        if (!qc[0] && qi != 1) {\r\n\r\n            // There can't be more than one zero.\r\n            qc.shift();\r\n            q.e--;\r\n        }\r\n\r\n        // Round?\r\n        if (qi > digits) {\r\n            rnd(q, dp, Big.RM, rem[0] !== u);\r\n        }\r\n\r\n        return q;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is equal to the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.eq = function (y) {\r\n        return !this.cmp(y);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.gt = function (y) {\r\n        return this.cmp(y) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is greater than or equal to the\r\n     * value of Big y, otherwise returns false.\r\n     */\r\n    P.gte = function (y) {\r\n        return this.cmp(y) > -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than the value of Big y,\r\n     * otherwise returns false.\r\n     */\r\n    P.lt = function (y) {\r\n        return this.cmp(y) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Big is less than or equal to the value\r\n     * of Big y, otherwise returns false.\r\n     */\r\n    P.lte = function (y) {\r\n         return this.cmp(y) < 1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big minus the value\r\n     * of Big y.\r\n     */\r\n    P.sub = P.minus = function (y) {\r\n        var i, j, t, xLTy,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.plus(y);\r\n        }\r\n\r\n        var xc = x.c.slice(),\r\n            xe = x.e,\r\n            yc = y.c,\r\n            ye = y.e;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n        }\r\n\r\n        // Determine which is the bigger number.\r\n        // Prepend zeros to equalise exponents.\r\n        if (a = xe - ye) {\r\n\r\n            if (xLTy = a < 0) {\r\n                a = -a;\r\n                t = xc;\r\n            } else {\r\n                ye = xe;\r\n                t = yc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (b = a; b--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        } else {\r\n\r\n            // Exponents equal. Check digit by digit.\r\n            j = ((xLTy = xc.length < yc.length) ? xc : yc).length;\r\n\r\n            for (a = b = 0; b < j; b++) {\r\n\r\n                if (xc[b] != yc[b]) {\r\n                    xLTy = xc[b] < yc[b];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // x < y? Point xc to the array of the bigger number.\r\n        if (xLTy) {\r\n            t = xc;\r\n            xc = yc;\r\n            yc = t;\r\n            y.s = -y.s;\r\n        }\r\n\r\n        /*\r\n         * Append zeros to xc if shorter. No need to add zeros to yc if shorter\r\n         * as subtraction only needs to start at yc.length.\r\n         */\r\n        if (( b = (j = yc.length) - (i = xc.length) ) > 0) {\r\n\r\n            for (; b--; xc[i++] = 0) {\r\n            }\r\n        }\r\n\r\n        // Subtract yc from xc.\r\n        for (b = i; j > a;){\r\n\r\n            if (xc[--j] < yc[j]) {\r\n\r\n                for (i = j; i && !xc[--i]; xc[i] = 9) {\r\n                }\r\n                --xc[i];\r\n                xc[j] += 10;\r\n            }\r\n            xc[j] -= yc[j];\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--b] === 0; xc.pop()) {\r\n        }\r\n\r\n        // Remove leading zeros and adjust exponent accordingly.\r\n        for (; xc[0] === 0;) {\r\n            xc.shift();\r\n            --ye;\r\n        }\r\n\r\n        if (!xc[0]) {\r\n\r\n            // n - n = +0\r\n            y.s = 1;\r\n\r\n            // Result must be zero.\r\n            xc = [ye = 0];\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big modulo the\r\n     * value of Big y.\r\n     */\r\n    P.mod = function (y) {\r\n        var yGTx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        if (!y.c[0]) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        x.s = y.s = 1;\r\n        yGTx = y.cmp(x) == 1;\r\n        x.s = a;\r\n        y.s = b;\r\n\r\n        if (yGTx) {\r\n            return new Big(x);\r\n        }\r\n\r\n        a = Big.DP;\r\n        b = Big.RM;\r\n        Big.DP = Big.RM = 0;\r\n        x = x.div(y);\r\n        Big.DP = a;\r\n        Big.RM = b;\r\n\r\n        return this.minus( x.times(y) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big plus the value\r\n     * of Big y.\r\n     */\r\n    P.add = P.plus = function (y) {\r\n        var t,\r\n            x = this,\r\n            Big = x.constructor,\r\n            a = x.s,\r\n            b = (y = new Big(y)).s;\r\n\r\n        // Signs differ?\r\n        if (a != b) {\r\n            y.s = -b;\r\n            return x.minus(y);\r\n        }\r\n\r\n        var xe = x.e,\r\n            xc = x.c,\r\n            ye = y.e,\r\n            yc = y.c;\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n            // y is non-zero? x is non-zero? Or both are zero.\r\n            return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n        }\r\n        xc = xc.slice();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        // Note: Faster to use reverse then do unshifts.\r\n        if (a = xe - ye) {\r\n\r\n            if (a > 0) {\r\n                ye = xe;\r\n                t = yc;\r\n            } else {\r\n                a = -a;\r\n                t = xc;\r\n            }\r\n\r\n            t.reverse();\r\n            for (; a--; t.push(0)) {\r\n            }\r\n            t.reverse();\r\n        }\r\n\r\n        // Point xc to the longer array.\r\n        if (xc.length - yc.length < 0) {\r\n            t = yc;\r\n            yc = xc;\r\n            xc = t;\r\n        }\r\n        a = yc.length;\r\n\r\n        /*\r\n         * Only start adding at yc.length - 1 as the further digits of xc can be\r\n         * left as they are.\r\n         */\r\n        for (b = 0; a;) {\r\n            b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n            xc[a] %= 10;\r\n        }\r\n\r\n        // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n        if (b) {\r\n            xc.unshift(b);\r\n            ++ye;\r\n        }\r\n\r\n         // Remove trailing zeros.\r\n        for (a = xc.length; xc[--a] === 0; xc.pop()) {\r\n        }\r\n\r\n        y.c = xc;\r\n        y.e = ye;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a Big whose value is the value of this Big raised to the power n.\r\n     * If n is negative, round, if necessary, to a maximum of Big.DP decimal\r\n     * places using rounding mode Big.RM.\r\n     *\r\n     * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n     */\r\n    P.pow = function (n) {\r\n        var x = this,\r\n            one = new x.constructor(1),\r\n            y = one,\r\n            isNeg = n < 0;\r\n\r\n        if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n            throwErr('!pow!');\r\n        }\r\n\r\n        n = isNeg ? -n : n;\r\n\r\n        for (;;) {\r\n\r\n            if (n & 1) {\r\n                y = y.times(x);\r\n            }\r\n            n >>= 1;\r\n\r\n            if (!n) {\r\n                break;\r\n            }\r\n            x = x.times(x);\r\n        }\r\n\r\n        return isNeg ? one.div(y) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big rounded to a\r\n     * maximum of dp decimal places using rounding mode rm.\r\n     * If dp is not specified, round to 0 decimal places.\r\n     * If rm is not specified, use Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     * [rm] 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n     */\r\n    P.round = function (dp, rm) {\r\n        var x = this,\r\n            Big = x.constructor;\r\n\r\n        if (dp == null) {\r\n            dp = 0;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!round!');\r\n        }\r\n        rnd(x = new Big(x), dp, rm == null ? Big.RM : rm);\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the square root of the value of this Big,\r\n     * rounded, if necessary, to a maximum of Big.DP decimal places using\r\n     * rounding mode Big.RM.\r\n     */\r\n    P.sqrt = function () {\r\n        var estimate, r, approx,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            i = x.s,\r\n            e = x.e,\r\n            half = new Big('0.5');\r\n\r\n        // Zero?\r\n        if (!xc[0]) {\r\n            return new Big(x);\r\n        }\r\n\r\n        // If negative, throw NaN.\r\n        if (i < 0) {\r\n            throwErr(NaN);\r\n        }\r\n\r\n        // Estimate.\r\n        i = Math.sqrt(x.toString());\r\n\r\n        // Math.sqrt underflow/overflow?\r\n        // Pass x to Math.sqrt as integer, then adjust the result exponent.\r\n        if (i === 0 || i === 1 / 0) {\r\n            estimate = xc.join('');\r\n\r\n            if (!(estimate.length + e & 1)) {\r\n                estimate += '0';\r\n            }\r\n\r\n            r = new Big( Math.sqrt(estimate).toString() );\r\n            r.e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n        } else {\r\n            r = new Big(i.toString());\r\n        }\r\n\r\n        i = r.e + (Big.DP += 4);\r\n\r\n        // Newton-Raphson iteration.\r\n        do {\r\n            approx = r;\r\n            r = half.times( approx.plus( x.div(approx) ) );\r\n        } while ( approx.c.slice(0, i).join('') !==\r\n                       r.c.slice(0, i).join('') );\r\n\r\n        rnd(r, Big.DP -= 4, Big.RM);\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Big whose value is the value of this Big times the value of\r\n     * Big y.\r\n     */\r\n    P.mul = P.times = function (y) {\r\n        var c,\r\n            x = this,\r\n            Big = x.constructor,\r\n            xc = x.c,\r\n            yc = (y = new Big(y)).c,\r\n            a = xc.length,\r\n            b = yc.length,\r\n            i = x.e,\r\n            j = y.e;\r\n\r\n        // Determine sign of result.\r\n        y.s = x.s == y.s ? 1 : -1;\r\n\r\n        // Return signed 0 if either 0.\r\n        if (!xc[0] || !yc[0]) {\r\n            return new Big(y.s * 0);\r\n        }\r\n\r\n        // Initialise exponent of result as x.e + y.e.\r\n        y.e = i + j;\r\n\r\n        // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n        if (a < b) {\r\n            c = xc;\r\n            xc = yc;\r\n            yc = c;\r\n            j = a;\r\n            a = b;\r\n            b = j;\r\n        }\r\n\r\n        // Initialise coefficient array of result with zeros.\r\n        for (c = new Array(j = a + b); j--; c[j] = 0) {\r\n        }\r\n\r\n        // Multiply.\r\n\r\n        // i is initially xc.length.\r\n        for (i = b; i--;) {\r\n            b = 0;\r\n\r\n            // a is yc.length.\r\n            for (j = a + i; j > i;) {\r\n\r\n                // Current sum of products at this digit position, plus carry.\r\n                b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n                c[j--] = b % 10;\r\n\r\n                // carry\r\n                b = b / 10 | 0;\r\n            }\r\n            c[j] = (c[j] + b) % 10;\r\n        }\r\n\r\n        // Increment result exponent if there is a final carry.\r\n        if (b) {\r\n            ++y.e;\r\n        }\r\n\r\n        // Remove any leading zero.\r\n        if (!c[0]) {\r\n            c.shift();\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = c.length; !c[--i]; c.pop()) {\r\n        }\r\n        y.c = c;\r\n\r\n        return y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big.\r\n     * Return exponential notation if this Big has a positive exponent equal to\r\n     * or greater than Big.E_POS, or a negative exponent equal to or less than\r\n     * Big.E_NEG.\r\n     */\r\n    P.toString = P.valueOf = P.toJSON = function () {\r\n        var x = this,\r\n            Big = x.constructor,\r\n            e = x.e,\r\n            str = x.c.join(''),\r\n            strL = str.length;\r\n\r\n        // Exponential notation?\r\n        if (e <= Big.E_NEG || e >= Big.E_POS) {\r\n            str = str.charAt(0) + (strL > 1 ? '.' + str.slice(1) : '') +\r\n              (e < 0 ? 'e' : 'e+') + e;\r\n\r\n        // Negative exponent?\r\n        } else if (e < 0) {\r\n\r\n            // Prepend zeros.\r\n            for (; ++e; str = '0' + str) {\r\n            }\r\n            str = '0.' + str;\r\n\r\n        // Positive exponent?\r\n        } else if (e > 0) {\r\n\r\n            if (++e > strL) {\r\n\r\n                // Append zeros.\r\n                for (e -= strL; e-- ; str += '0') {\r\n                }\r\n            } else if (e < strL) {\r\n                str = str.slice(0, e) + '.' + str.slice(e);\r\n            }\r\n\r\n        // Exponent zero.\r\n        } else if (strL > 1) {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n        }\r\n\r\n        // Avoid '-0'\r\n        return x.s < 0 && x.c[0] ? '-' + str : str;\r\n    };\r\n\r\n\r\n    /*\r\n     ***************************************************************************\r\n     * If toExponential, toFixed, toPrecision and format are not required they\r\n     * can safely be commented-out or deleted. No redundant code will be left.\r\n     * format is used only by toExponential, toFixed and toPrecision.\r\n     ***************************************************************************\r\n     */\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in exponential\r\n     * notation to dp fixed decimal places and rounded, if necessary, using\r\n     * Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toExponential = function (dp) {\r\n\r\n        if (dp == null) {\r\n            dp = this.c.length - 1;\r\n        } else if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n            throwErr('!toExp!');\r\n        }\r\n\r\n        return format(this, dp, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big in normal notation\r\n     * to dp fixed decimal places and rounded, if necessary, using Big.RM.\r\n     *\r\n     * [dp] {number} Integer, 0 to MAX_DP inclusive.\r\n     */\r\n    P.toFixed = function (dp) {\r\n        var str,\r\n            x = this,\r\n            Big = x.constructor,\r\n            neg = Big.E_NEG,\r\n            pos = Big.E_POS;\r\n\r\n        // Prevent the possibility of exponential notation.\r\n        Big.E_NEG = -(Big.E_POS = 1 / 0);\r\n\r\n        if (dp == null) {\r\n            str = x.toString();\r\n        } else if (dp === ~~dp && dp >= 0 && dp <= MAX_DP) {\r\n            str = format(x, x.e + dp);\r\n\r\n            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.\r\n            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n            if (x.s < 0 && x.c[0] && str.indexOf('-') < 0) {\r\n        //E.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.\r\n                str = '-' + str;\r\n            }\r\n        }\r\n        Big.E_NEG = neg;\r\n        Big.E_POS = pos;\r\n\r\n        if (!str) {\r\n            throwErr('!toFix!');\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Big rounded to sd\r\n     * significant digits using Big.RM. Use exponential notation if sd is less\r\n     * than the number of digits necessary to represent the integer part of the\r\n     * value in normal notation.\r\n     *\r\n     * sd {number} Integer, 1 to MAX_DP inclusive.\r\n     */\r\n    P.toPrecision = function (sd) {\r\n\r\n        if (sd == null) {\r\n            return this.toString();\r\n        } else if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n            throwErr('!toPre!');\r\n        }\r\n\r\n        return format(this, sd - 1, 2);\r\n    };\r\n\r\n\r\n    // Export\r\n\r\n\r\n    Big = bigFactory();\r\n\r\n    //AMD.\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return Big;\r\n        });\r\n\r\n    // Node and other CommonJS-like environments that support module.exports.\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = Big;\r\n\r\n    //Browser.\r\n    } else {\r\n        global.Big = Big;\r\n    }\r\n})(this);\r\n\n},{}],2:[function(require,module,exports){\n(function (process){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n}).call(this,require('_process'))\n\n},{\"_process\":3}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _LatexParser = require(\"./parsing/LatexParser\");\n\nvar _LatexParser2 = _interopRequireDefault(_LatexParser);\n\nvar _Logmon = require(\"./utility_services/Logmon\");\n\nvar _Logmon2 = _interopRequireDefault(_Logmon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Logmon.createLoggerWithOptions(\"Logcal\", true, true);\n\n// let eqc = {\n//   Calculator: {\n\n//   },\n//   MathComponents: {\n//     Basic: {\n//       MathTerm,\n//       MathOperation,\n//     },\n//     MathObject,\n//   },\n//   Parsing: {\n//     LatexParser,\n//   },\n//   UtilityServices: {\n//     IDG,\n//     Orderer,\n//     Penis: \"afhh\",\n//   }\n// };\n\n// import MathObject from \"./math-components/MathObject\";\n// import MathTerm from \"./math-components/basic/MathTerm\";\n// import MathOperation from \"./math-components/basic/MathOperation\";\n\nvar eqc = {\n  Parser: new _LatexParser2.default()\n};\n\n// import IDG from \"./utility_services/IdGenerator\";\n// import Orderer from \"./utility_services/Orderer\";\n\n/*\r\n * Instance of Logmon used for logging\r\n * And logging is needed, trust me\r\n */\n\nvar addToWindow = function addToWindow(windowInstance) {\n  if (windowInstance) {\n    console.log(\"wee window\");\n    window.eqc = eqc;\n  }\n};\n\naddToWindow(window);\nmodule.exports = eqc;\n\n},{\"./parsing/LatexParser\":15,\"./utility_services/Logmon\":19}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _IdGenerator = require(\"../utility_services/IdGenerator\");\n\nvar _IdGenerator2 = _interopRequireDefault(_IdGenerator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MathObject = function () {\n  function MathObject(type) {\n    _classCallCheck(this, MathObject);\n\n    this.type = type;\n    this.id = _IdGenerator2.default.nextId();\n    this.order = -1;\n    this.minussign = false;\n    this.reduced = false;\n    this.exponent = \"\";\n    this.parent = null;\n  }\n\n  _createClass(MathObject, [{\n    key: \"setType\",\n    value: function setType(name) {\n      this.type = name;\n    }\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.type === name;\n    }\n  }, {\n    key: \"setExponent\",\n    value: function setExponent(exponent) {\n      this.exponent = exponent;\n      // throw new TypeError(`${this.type} must override method setExponent`);\n    }\n  }, {\n    key: \"containsExponent\",\n    value: function containsExponent() {\n      return this.exponent && this.exponent.length !== 0;\n    }\n  }, {\n    key: \"setParent\",\n    value: function setParent(MathComponent) {\n      this.parent = MathComponent;\n    }\n    /*\r\n     * Below all the methods to be overridden\r\n     */\n\n  }, {\n    key: \"setOrder\",\n    value: function setOrder(depth) {\n      throw new TypeError(this.type + \" must override method setOrder\");\n    }\n  }, {\n    key: \"returnContentList\",\n    value: function returnContentList() {\n      throw new TypeError(this.type + \" must override method returnContentList\");\n    }\n  }, {\n    key: \"switchSign\",\n    value: function switchSign() {\n      throw new TypeError(this.type + \" must override method switchSign\");\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual() {\n      throw new TypeError(this.type + \" must override method isEqual\");\n    }\n  }, {\n    key: \"isTerm\",\n    value: function isTerm() {\n      throw new TypeError(this.type + \" must override method isTerm\");\n    }\n  }, {\n    key: \"isOperation\",\n    value: function isOperation() {\n      throw new TypeError(this.type + \" must override method isOperation\");\n    }\n  }, {\n    key: \"isBracketed\",\n    value: function isBracketed() {\n      throw new TypeError(this.type + \" must override method isBracketed\");\n    }\n  }, {\n    key: \"isSpecial\",\n    value: function isSpecial() {\n      throw new TypeError(this.type + \" must override method isSpecial\");\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      throw new TypeError(this.type + \" must override method isEmpty\");\n    }\n  }, {\n    key: \"includesVariable\",\n    value: function includesVariable(variable) {\n      throw new TypeError(this.type + \" must override method includesVariable\");\n    }\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      throw new TypeError(this.type + \" must override method toLatex\");\n    }\n  }]);\n\n  return MathObject;\n}();\n\nexports.default = MathObject;\n\n},{\"../utility_services/IdGenerator\":17}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathBracketed = function (_MathObject) {\n  _inherits(MathBracketed, _MathObject);\n\n  function MathBracketed(contentList) {\n    _classCallCheck(this, MathBracketed);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathBracketed).call(this, \"Bracketed\"));\n\n    _this.content = contentList;\n    return _this;\n  }\n\n  _createClass(MathBracketed, [{\n    key: \"switchSign\",\n    value: function switchSign() {\n      this.minussign = !this.minussign;\n    }\n  }, {\n    key: \"checkIfBracketsNeeded\",\n    value: function checkIfBracketsNeeded() {\n      return this.exponent || this.minussign || this.content.length !== 1;\n    }\n  }, {\n    key: \"returnContentIfPossible\",\n    value: function returnContentIfPossible() {\n      if (!this.checkIfBracketsNeeded()) {\n        return this.content[0];\n      }\n      return this;\n    }\n  }, {\n    key: \"toLatexWithoutBrackets\",\n    value: function toLatexWithoutBrackets() {\n      var latex = \"\";\n      if (this.minussign || this.exponent) {\n        latex += \"\\\\left(\";\n      }\n      for (var i = 0; i < this.content.length; i++) {\n        if (this.content[i].minussign) {\n          latex += this.content[i].toLatex();\n        } else {\n          if (i !== 0) {\n            latex += \"+\";\n          }\n          latex += this.content[i].toLatex();\n        }\n      }\n      if (this.minussign || this.exponent) {\n        latex += \"\\\\right)\";\n      }\n      if (this.exponent) {\n        latex += \"^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.exponent.toLatex();\n        }\n        latex += \"}\";\n      }\n      return latex;\n    }\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = this.minussign ? \"-\\\\left(\" : \"\\\\left(\";\n      for (var i = 0; i < this.content.length; i++) {\n        if (this.content[i].minussign) {\n          latex += this.content[i].toLatex();\n        } else {\n          if (i !== 0) {\n            latex += \"+\";\n          }\n          latex += this.content[i].toLatex();\n        }\n      }\n      latex += \"\\\\right)\";\n      if (this.exponent) {\n        latex += \"^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.exponent.toLatex();\n        }\n        latex += \"}\";\n      }\n      return latex;\n    }\n  }]);\n\n  return MathBracketed;\n}(_MathObject3.default);\n\nexports.default = MathBracketed;\n\n},{\"../MathObject\":5}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathEquation = function (_MathObject) {\n  _inherits(MathEquation, _MathObject);\n\n  function MathEquation() {\n    _classCallCheck(this, MathEquation);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathEquation).call(this, \"Equation\"));\n\n    _this.leftside = [];\n    _this.rightside = [];\n    return _this;\n  }\n\n  _createClass(MathEquation, [{\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = \"\";\n      var latexSide = function latexSide(side) {\n        for (var i = 0; i < side.length; i++) {\n          if (side[i].minussign) {\n            latex += side[i].toLatex();\n          } else {\n            if (i !== 0) {\n              latex += \"+\";\n            }\n            latex += side[i].toLatex();\n          }\n        }\n      };\n      latexSide(this.leftside);\n      latex += \"=\";\n      latexSide(this.rightside);\n      return latex;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var string = \"\";\n      var stringSide = function stringSide(side) {\n        for (var i = 0; i < side.length; i++) {\n          if (!side[i].minussign && i !== 0) {\n            string += \"+\";\n          }\n          string += side[i].toString();\n        }\n      };\n      stringSide(this.leftside);\n      string += \" = \";\n      stringSide(this.rightside);\n      return string;\n    }\n  }]);\n\n  return MathEquation;\n}(_MathObject3.default);\n\nexports.default = MathEquation;\n\n},{\"../MathObject\":5}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nvar _Orderer = require(\"../../utility_services/Orderer\");\n\nvar _Orderer2 = _interopRequireDefault(_Orderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathOperation = function (_MathObject) {\n  _inherits(MathOperation, _MathObject);\n\n  function MathOperation(factorone, type, factortwo) {\n    _classCallCheck(this, MathOperation);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathOperation).call(this, \"Operation\"));\n\n    _this.firstfactor = factorone;\n    _this.operation = type === \"(\" ? \"*\" : type;\n    _this.secondfactor = factortwo;\n\n    _this.isfraction = _this.operation === \"/\";\n    return _this;\n  }\n\n  _createClass(MathOperation, [{\n    key: \"setOrder\",\n    value: function setOrder(order) {\n      // console.log(\"ordering op \" + order);\n      order++;\n      this.order = order;\n      _Orderer2.default.registerComponent(order, \"Operation\");\n      this.firstfactor.setOrder(order);\n      this.firstfactor.setParent(this);\n      this.secondfactor.setOrder(order);\n      this.secondfactor.setParent(this);\n      if (this.exponent && this.exponent.length !== 0) {\n        //Orderer.registerComponent(order, \"Exponent\");\n        this.exponent.setOrder(order);\n        this.exponent.setParent(this);\n      }\n    }\n  }, {\n    key: \"switchSign\",\n    value: function switchSign() {\n      if (this.secondfactor.minussign && !this.firstfactor.minussign) {\n        this.secondfactor.switchSign();\n      } else if (!this.secondfactor.minussign && this.firstfactor.minussign) {\n        this.firstfactor.switchSign();\n      } else if (this.secondfactor.minussign && this.firstfactor.minussign) {\n        throw new TypeError(\"both factors are minussign in operation\" + this);\n        // cancels each other out so only switching this minussign? same as both not minussign\n      }\n      this.minussign = !this.minussign;\n    }\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = this.minussign ? \"-\" : \"\";\n      if (this.operation === \"*\") {\n        latex += this.firstfactor.toLatex() + \"\\\\cdot \" + this.secondfactor.toLatex();\n      } else {\n        // sulut n�ytt�� rumilta jos jakolasku. jos minus sulut s�ilyy\n        var first = this.firstfactor.isType(\"Bracketed\") ? this.firstfactor.toLatexWithoutBrackets() : this.firstfactor.toLatex();\n        var second = this.secondfactor.isType(\"Bracketed\") ? this.secondfactor.toLatexWithoutBrackets() : this.secondfactor.toLatex();\n        latex += \"\\\\frac{\" + first + \"}{\" + second + \"}\";\n      }\n      if (this.exponent) {\n        latex += \"^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.exponent.toLatex();\n        }\n        latex += \"}\";\n      }\n      return latex;\n    }\n  }]);\n\n  return MathOperation;\n}(_MathObject3.default);\n\nexports.default = MathOperation;\n\n},{\"../../utility_services/Orderer\":20,\"../MathObject\":5}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathSymbol = function (_MathObject) {\n  _inherits(MathSymbol, _MathObject);\n\n  function MathSymbol(command) {\n    _classCallCheck(this, MathSymbol);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathSymbol).call(this, \"Symbol\"));\n\n    _this.command = command;\n    return _this;\n  }\n\n  _createClass(MathSymbol, [{\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = \"\\\\\" + this.command;\n      // adds extra space to the end of the command so the parsing doesn't break it\n      if (/^[a-zA-Z]/.test(this.command.charAt(this.command.length - 1))) {\n        latex += \" \";\n      }\n      return latex;\n    }\n  }]);\n\n  return MathSymbol;\n}(_MathObject3.default);\n\nexports.default = MathSymbol;\n\n},{\"../MathObject\":5}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _big = require(\"big.js\");\n\nvar _big2 = _interopRequireDefault(_big);\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nvar _Orderer = require(\"../../utility_services/Orderer\");\n\nvar _Orderer2 = _interopRequireDefault(_Orderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathTerm = function (_MathObject) {\n  _inherits(MathTerm, _MathObject);\n\n  function MathTerm(variable, value, exponent) {\n    _classCallCheck(this, MathTerm);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathTerm).call(this, \"Term\"));\n\n    _this.variable = variable;\n    _this.value = new _big2.default(value);\n    _this.exponent = exponent;\n    return _this;\n  }\n\n  // Methods for big.js http://mikemcl.github.io/big.js/\n\n\n  _createClass(MathTerm, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return parseFloat(this.value.toString());\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.value = new _big2.default(value);\n    }\n  }, {\n    key: \"plusValue\",\n    value: function plusValue(value) {\n      this.value = this.value.add(value);\n    }\n  }, {\n    key: \"minusValue\",\n    value: function minusValue(value) {\n      this.value = this.value.minus(value);\n    }\n  }, {\n    key: \"multiplyValue\",\n    value: function multiplyValue(value) {\n      this.value = this.value.times(value);\n    }\n  }, {\n    key: \"divideValue\",\n    value: function divideValue(value) {\n      this.value = this.value.div(value);\n    }\n  }, {\n    key: \"powValue\",\n    value: function powValue(value) {\n      var power = parseFloat(value.toString());\n      // checks for integer, uses Big for only integer exponentation\n      // such as 0.1^6 for precision\n      if (power === parseInt(power)) {\n        this.value = this.value.pow(parseFloat(value.toString()));\n      } else {\n        this.value = new _big2.default(Math.pow(this.getValue(), parseFloat(value.toString())));\n      }\n    }\n    // needed for sorting in SolverCore\n\n  }, {\n    key: \"getPossibleExponentValue\",\n    value: function getPossibleExponentValue() {\n      if (this.exponent) {\n        if (this.exponent.isTerm()) {\n          return this.exponent.getValue();\n        } else {\n          return 9999;\n        }\n      } else {\n        return 1;\n      }\n    }\n  }, {\n    key: \"compareToTermExponents\",\n    value: function compareToTermExponents(FirstT, SecondT) {\n      if (FirstT.variable.length > SecondT.variable.length) {\n        return -1;\n      } else if (SecondT.variable.length > FirstT.variable.length) {\n        return 1;\n      } else {\n        var first = FirstT.getPossibleExponentValue();\n        var sec = SecondT.getPossibleExponentValue();\n        if (first > sec) {\n          return -1;\n        } else if (sec > first) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }\n    }\n    // end\n\n  }, {\n    key: \"setOrder\",\n    value: function setOrder(order) {\n      // this.order = order;\n      if (this.exponent && this.exponent.length !== 0) {\n        // order++;\n        // this.order = order;\n        // Orderer.registerComponent(order, \"Term\");\n\n        order++;\n        _Orderer2.default.registerComponent(order, \"Exponent\"); // no reason to register terms unless they have exponents??\n        this.exponent.order = order;\n        this.exponent.setOrder(order);\n        this.exponent.setParent(this);\n      }\n    }\n  }, {\n    key: \"getVariables\",\n    value: function getVariables() {\n      var variables = [];\n      for (var c = 0; c < this.variable.length; c++) {\n        variables.push(this.variable.charAt(c));\n      }\n      return variables;\n    }\n  }, {\n    key: \"includesVariable\",\n    value: function includesVariable(Variable) {\n      return this.variable === Variable && this.variablevalue !== 0;\n    }\n  }, {\n    key: \"checkSign\",\n    value: function checkSign() {\n      this.minussign = this.getValue() > 0 && this.minussign ? false : this.minussign;\n      this.minussign = this.getValue() < 0 && !this.minussign ? true : this.minussign;\n    }\n  }, {\n    key: \"switchSign\",\n    value: function switchSign() {\n      this.multiplyValue(-1);\n      this.checkSign();\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.getValue() === 0;\n    }\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = \"\";\n      var val = this.getValue();\n      if (!this.variable) {\n        latex += val;\n      } else if (val === 1 && this.variable) {\n        latex += this.variable;\n      } else if (val === -1 && this.variable) {\n        latex += \"-\" + this.variable;\n      } else {\n        latex += val + this.variable;\n      }\n      if (this.containsExponent()) {\n        latex += \"^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.exponent.toLatex();\n        }\n        latex += \"}\";\n      }\n      return latex;\n    }\n\n    // toString() {\n    //   let latex = \"\";\n    //   const val = this.getValue();\n    //   if (!this.variable) {\n    //     latex += val;\n    //   } else if (val === 1 && this.variable) {\n    //     latex += this.variable;\n    //   } else if (val === -1 && this.variable) {\n    //     latex += \"-\" + this.variable;\n    //   } else {\n    //     latex += val + this.variable;\n    //   }\n    //   if (this.containsExponent()) {\n    //     latex += \"^{\";\n    //     if (this.exponent.isBracketed()) {\n    //       latex += this.exponent.toString();\n    //     } else {\n    //       latex += this.exponent.toString();\n    //     }\n    //     latex += \"}\";\n    //   }\n    //   return latex;\n    // }\n\n  }]);\n\n  return MathTerm;\n}(_MathObject3.default);\n\nexports.default = MathTerm;\n\n},{\"../../utility_services/Orderer\":20,\"../MathObject\":5,\"big.js\":1}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathBinomial = function (_MathObject) {\n  _inherits(MathBinomial, _MathObject);\n\n  function MathBinomial(upper, lower) {\n    _classCallCheck(this, MathBinomial);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathBinomial).call(this, \"Binomial\"));\n\n    _this.upper = upper;\n    _this.lower = lower;\n    return _this;\n  }\n\n  _createClass(MathBinomial, [{\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = \"\\\\binom{\";\n      if (this.upper.isType(\"Bracketed\")) {\n        latex += this.upper.toLatexWithoutBrackets();\n      } else {\n        latex += this.upper.toLatex();\n      }\n      latex += \"}{\";\n      if (this.lower.isType(\"Bracketed\")) {\n        latex += this.lower.toLatexWithoutBrackets();\n      } else {\n        latex += this.lower.toLatex();\n      }\n      if (this.exponent) {\n        latex += \"}^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.toLatex();\n        }\n        latex += \"}\";\n      } else {\n        latex += \"}\";\n      }\n      return latex;\n    }\n  }]);\n\n  return MathBinomial;\n}(_MathObject3.default);\n\nexports.default = MathBinomial;\n\n},{\"../MathObject\":5}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathFactorial = function (_MathObject) {\n  _inherits(MathFactorial, _MathObject);\n\n  function MathFactorial(component) {\n    _classCallCheck(this, MathFactorial);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathFactorial).call(this, \"Factorial\"));\n\n    _this.component = component;\n    return _this;\n  }\n\n  _createClass(MathFactorial, [{\n    key: \"switchSign\",\n    value: function switchSign() {\n      this.component.switchSign();\n      this.minussign = !this.minussign;\n    }\n  }, {\n    key: \"toLatex\",\n    value: function toLatex() {\n      return this.component.toLatex() + \"!\";\n    }\n  }]);\n\n  return MathFactorial;\n}(_MathObject3.default);\n\nexports.default = MathFactorial;\n\n},{\"../MathObject\":5}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _MathObject2 = require(\"../MathObject\");\n\nvar _MathObject3 = _interopRequireDefault(_MathObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MathProbabilty = function (_MathObject) {\n  _inherits(MathProbabilty, _MathObject);\n\n  function MathProbabilty(contentList) {\n    _classCallCheck(this, MathProbabilty);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MathProbabilty).call(this, \"Probability\"));\n\n    _this.content = contentList;\n    return _this;\n  }\n\n  _createClass(MathProbabilty, [{\n    key: \"toLatex\",\n    value: function toLatex() {\n      var latex = this.minussign ? \"-\" : \"\";\n      latex += \"P\\\\left(\";\n      for (var i = 0; i < this.content.length; i++) {\n        latex += this.content[i].toLatex();\n      }\n      latex += \"\\\\right)\";\n      if (this.exponent) {\n        latex += \"^{\";\n        if (this.exponent.isType(\"Bracketed\")) {\n          latex += this.exponent.toLatexWithoutBrackets();\n        } else {\n          latex += this.exponent.toLatex();\n        }\n        latex += \"}\";\n      }\n      return latex;\n    }\n  }]);\n\n  return MathProbabilty;\n}(_MathObject3.default);\n\nexports.default = MathProbabilty;\n\n},{\"../MathObject\":5}],14:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Evaluator = function () {\n  function Evaluator() {\n    _classCallCheck(this, Evaluator);\n  }\n\n  _createClass(Evaluator, [{\n    key: \"isTerm\",\n    value: function isTerm(inputChar) {\n      return inputChar >= \"0\" && inputChar <= \"9\" || /^[a-zA-Z]*$/.test(inputChar);\n    }\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(inputChar) {\n      return inputChar >= \"0\" && inputChar <= \"9\" || inputChar === \".\";\n    }\n  }, {\n    key: \"isAlpha\",\n    value: function isAlpha(inputChar) {\n      return (/^[a-zA-Z]*$/.test(inputChar)\n      );\n    }\n  }, {\n    key: \"isSign\",\n    value: function isSign(inputChar) {\n      return (/^[\\-]|[\\+]/.test(inputChar)\n      );\n    }\n  }, {\n    key: \"isWhitespace\",\n    value: function isWhitespace(inputChar) {\n      return inputChar === \" \" || inputChar === \"\\t\" || inputChar === \"\\n\";\n    }\n  }, {\n    key: \"isParsableComponent\",\n    value: function isParsableComponent(inputChar) {\n      return inputChar >= \"0\" && inputChar <= \"9\" || /^[a-zA-Z]*$/.test(inputChar) || inputChar === \"\\\\\";\n    }\n  }, {\n    key: \"isConjoinedMultiplication\",\n    value: function isConjoinedMultiplication(signed, currentChar, lastChar, list, component) {\n      return !signed && currentChar !== \"\\\\\" && lastChar !== \"=\" && list.length > 1 && list[list.length - 2].type !== \"Symbol\" && component.type !== \"Symbol\";\n    }\n  }]);\n\n  return Evaluator;\n}();\n\nexports.default = Evaluator;\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logmon = require(\"../utility_services/Logmon\");\n\nvar _Logmon2 = _interopRequireDefault(_Logmon);\n\nvar _Evaluator = require(\"./Evaluator\");\n\nvar _Evaluator2 = _interopRequireDefault(_Evaluator);\n\nvar _Logger = require(\"../utility_services/Logger\");\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _MathEquation = require(\"../math-components/basic/MathEquation\");\n\nvar _MathEquation2 = _interopRequireDefault(_MathEquation);\n\nvar _MathTerm = require(\"../math-components/basic/MathTerm\");\n\nvar _MathTerm2 = _interopRequireDefault(_MathTerm);\n\nvar _MathOperation = require(\"../math-components/basic/MathOperation\");\n\nvar _MathOperation2 = _interopRequireDefault(_MathOperation);\n\nvar _MathBracketed = require(\"../math-components/basic/MathBracketed\");\n\nvar _MathBracketed2 = _interopRequireDefault(_MathBracketed);\n\nvar _MathSymbol = require(\"../math-components/basic/MathSymbol\");\n\nvar _MathSymbol2 = _interopRequireDefault(_MathSymbol);\n\nvar _MathProbability = require(\"../math-components/probability/MathProbability\");\n\nvar _MathProbability2 = _interopRequireDefault(_MathProbability);\n\nvar _MathBinomial = require(\"../math-components/probability/MathBinomial\");\n\nvar _MathBinomial2 = _interopRequireDefault(_MathBinomial);\n\nvar _MathFactorial = require(\"../math-components/probability/MathFactorial\");\n\nvar _MathFactorial2 = _interopRequireDefault(_MathFactorial);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Logcal = _Logmon2.default.getLogger(\"Logcal\");\n\nvar LatexParser = function () {\n  function LatexParser() {\n    _classCallCheck(this, LatexParser);\n\n    this.Evaluator = new _Evaluator2.default();\n    this.input = \"\";\n    this.index = 0;\n    this.status = \"\";\n    this.bad = 0;\n    this.variables = {};\n  }\n\n  _createClass(LatexParser, [{\n    key: \"setInput\",\n    value: function setInput(latex) {\n      this.input = latex;\n      this.index = 0;\n      this.status = \"\";\n      this.bad = 0;\n      this.variables = {};\n      _Logger2.default.resetLogs();\n    }\n  }, {\n    key: \"parseEquation\",\n    value: function parseEquation(latex) {\n      Logcal.start(\"LatexParser parseEquation(latex): \" + latex);\n      // Logcal.timerStart(\"LatexParser parseEquation\");\n\n      this.setInput(latex);\n      var equation = new _MathEquation2.default();\n      // try {\n      equation.leftside = this.parseToChar(\"=\");\n      equation.rightside = this.parseToChar(\"\\\\\\\\\");\n      // } catch (e) {\n      //   console.log(\"LatexParser errored!\", e);\n      //   this.status = \"Parser error\";\n      // }\n\n      // Logcal.timerEnd(\"LatexParser parseEquation\");\n      Logcal.append(\"equation(latex) \" + equation.toLatex());\n      Logcal.end(\"FROM LatexParser parseEquation(latex): RETURN equation \" + equation.toLatex());\n      return equation;\n    }\n  }, {\n    key: \"parseToChar\",\n    value: function parseToChar(exitingChar) {\n      Logcal.start(\"parseToChar(exitingChar): \" + exitingChar);\n      var list = [],\n          lastChar = \"\",\n          currentChar = \"\",\n          negative = false,\n          signed = false,\n          component = null;\n\n      while (this.index < this.input.length) {\n        if (this.bad === 10) return list;\n        lastChar = this.getLastChar(this.index);\n        currentChar = this.getChar();\n\n        if (this.Evaluator.isParsableComponent(currentChar)) {\n          component = this.parseNextComponent(list, signed);\n          if (component) {\n            if (negative) {\n              component.switchSign();\n            }\n            list.push(component);\n            // checks for if current component was command > no multiplication as is it handled\n            // also for not self/previous component being Symbol if inside probability\n            if (this.Evaluator.isConjoinedMultiplication(signed, currentChar, lastChar, list, component)) {\n              Logcal.append(\"isConjoinedMultiplication === TRUE\");\n              Logcal.append(\">CreateMultiplactionFromList(list) list \" + list);\n              this.createMultiplicationFromList(list);\n            }\n            negative = false;\n            signed = false;\n          }\n        } else if (currentChar === exitingChar) {\n          if (this.index !== this.input.length - 1) {\n            this.parseChar();\n          }\n          Logcal.append(\"currentChar === exitingChar\");\n          Logcal.end(\"FROM parseToChar(exitingchar): \" + exitingChar + \" RETURN list \" + list);\n          return list;\n        } else if (currentChar === \"-\" || currentChar === \"+\") {\n          signed = true;\n          negative = this.parseSign();\n        } else if (currentChar === \"^\") {\n          component = this.parseIfExponent();\n          if (component) {\n            list[list.length - 1].setExponent(exponent);\n          }\n          // negative = false; // how could these even be possible??\n          // signed = false;\n        } else if (currentChar === \"_\") {\n            console.log(\"underscore _ inputted inside parseToChar and it's not implemented.. :/\");\n            this.index++;\n          } else if (currentChar === \"!\") {\n            // factorials aren't consumed in parseBracketed?..\n            this.index++;\n          } else if (currentChar === \"}\" || currentChar === \")\") {\n            // do nutting, just consume the char?\n            this.index++;\n          } else {\n            this.bad++;\n            this.index++;\n            if (this.bad === 10) {\n              console.log(\"too many bad characters \" + this.currentlyParsed());\n              this.status = \"Bad input\";\n              Logcal.end(\"FROM parseToChar(exitingChar): \" + exitingChar + \" RETURN list \" + list);\n              throw new Error(\"Bad input\");\n            }\n            negative = false;\n            signed = false;\n          }\n      }\n      Logcal.end(\"FROM parseToChar(exitingChar): RETURN list \" + list);\n      return list;\n    }\n  }, {\n    key: \"parseNextComponent\",\n    value: function parseNextComponent(list, signed) {\n      Logcal.start(\"parseNextComponent(list, signed): \" + list + \", \" + signed);\n      var component = null,\n          currentChar = this.parseIfWhitespace();\n\n      // this.parseIfWhitespace();\n      // currentChar = this.input.charAt(this.index);\n\n      if (currentChar === \"P\") {\n        if (this.isNext(\"\\\\left(\")) {\n          component = this.parseProbability();\n        } else {\n          component = this.parseTerm();\n        }\n      } else if (this.Evaluator.isTerm(currentChar)) {\n        component = this.parseTerm();\n      } else if (currentChar === \"\\\\\") {\n        this.parseCommand(list, signed);\n        component = list.splice(list.length - 1, 1)[0];\n        // component = list[list.length-1];\n      } else {\n          console.log(\"Unknown currentChar(\" + currentChar + \") in parseNextComponent\");\n          Logcal.end(\"FROM parseNextComponent(list, signed): RETURN component \" + component);\n          throw new TypeError(\"Unknown currentChar \" + currentChar + \" in parseNextComponent\");\n          // return component;\n        }\n      Logcal.end(\"FROM parseNextComponent(list, signed): RETURN component \" + component);\n      return component;\n    }\n  }, {\n    key: \"parseTerm\",\n    value: function parseTerm() {\n      Logcal.start(\"parseTerm():\");\n      var value = \"\",\n          variable = \"\",\n          term = void 0,\n          exponent = void 0,\n          lower = \"\",\n          currentChar = this.getChar(),\n          factorial = false;\n\n      while (this.Evaluator.isNumeric(currentChar)) {\n        value += currentChar;\n        currentChar = this.parseChar();\n      }\n      while (this.Evaluator.isAlpha(currentChar)) {\n        variable += currentChar;\n        // maybe add crazy functionality for xx notation which is x^2\n        this.addAlphaCharToVariables(currentChar);\n        currentChar = this.parseChar();\n      }\n      if (currentChar === \"!\") {\n        // factorial\n        factorial = true;\n        currentChar = this.parseChar();\n      }\n      if (currentChar === \"_\") {\n        // has a underscore notation\n        currentChar = this.parseChar();\n        if (currentChar === \"{\") {\n          lower = this.parseToChar(\"}\");\n        } else {\n          // only one component which is term???\n          lower = this.parseTerm();\n        }\n      }\n      currentChar = this.getChar(); // or parseChar??\n      exponent = this.parseIfExponent();\n      if (currentChar === \"'\") {\n        Logcal.append(\"Transforming Term into complement\");\n        currentChar = this.parseChar();\n        exponent = new _MathSymbol2.default(\"mathsf{c}\");\n      }\n      value = value.length === 0 ? 1 : parseFloat(value);\n      term = new _MathTerm2.default(variable, value, exponent);\n      if (factorial) {\n        Logcal.append(\"Whops 'Term' was actually factorial\");\n        term = new _MathFactorial2.default(term);\n      }\n      Logcal.end(\"FROM parseTerm(): RETURN term \" + term);\n      return term;\n    }\n  }, {\n    key: \"parseIfExponent\",\n    value: function parseIfExponent() {\n      Logcal.start(\"parseIfExponent():\");\n      var currentChar = this.parseIfChar(\"^\");\n      var exponent = \"\";\n      if (currentChar) {\n        if (currentChar === \"{\") {\n          var list = [];\n          this.parseCurlyBracketed(list);\n          exponent = list[0].returnContentIfPossible();\n        } else {\n          exponent = this.parseTerm();\n        }\n      }\n      Logcal.end(\"FROM parseIfExponent(): RETURN exponent \" + exponent);\n      return exponent;\n    }\n  }, {\n    key: \"parseCommand\",\n    value: function parseCommand(list, signed) {\n      Logcal.append(\"parseCommand(list, signed): \" + list + \", \" + signed);\n      var command = \"\",\n          lastChar = this.getLastChar(),\n          currentChar = this.parseChar(); // consuming \\\n\n      while (this.Evaluator.isAlpha(currentChar)) {\n        command += currentChar;\n        currentChar = this.parseChar();\n        if (command.length === 10) {\n          throw \"overly long string in parseCommand \" + command;\n        }\n      }\n      Logcal.append(\"Command is \" + command);\n      switch (command) {\n        case \"cdot\":\n          this.parseMultiplication(list);\n          break;\n        case \"frac\":\n          this.parseFraction(list);\n          if (!signed && lastChar !== \"=\" && list.length > 1) {\n            Logcal.append(\"CreateMultiplactionFromList(list): \" + list);\n            this.createMultiplicationFromList(list);\n          }\n          break;\n        case \"left\":\n          if (currentChar === \"(\" && (signed || lastChar === \"=\" || list.length === 0)) {\n            this.parseRoundBracketed(list);\n          } else if (currentChar === \"(\") {\n            this.parseMultiplication(list);\n          } else {\n            // unknown thingy i.e. { / [ / | or something\n            console.log(\"unknown left thingy \" + c);\n            list.push(new _MathSymbol2.default(command));\n            break;\n          }\n          break;\n        case \"right\":\n          return; // returning to parseToChar without consuming \")\" or whatever\n          break;\n        case \"sum\":\n          this.parseSum(list);\n          break;\n        case \"binom\":\n          this.parseBinomial(list);\n          if (!signed && lastChar !== \"=\" && list.length > 1) {\n            this.createMultiplicationFromList(list);\n          }\n          break;\n        case \"mathsf\":\n          var complement = [];\n          this.parseCurlyBracketed(complement);\n          var content = complement[0].content;\n          if (content.length === 1 && content[0].isType(\"Term\") && content[0].variable === \"c\") {\n            list.push(new _MathSymbol2.default(\"mathsf{c}\"));\n          }\n          break;\n        case \"text\":\n          // just parses and ignores\n          this.skipToChar(\"}\");\n          break;\n        default:\n          var symbol = new _MathSymbol2.default(command);\n          list.push(symbol);\n          break;\n      }\n    }\n  }, {\n    key: \"parseMultiplication\",\n    value: function parseMultiplication(list) {\n      Logcal.append(\"parseMultiplication(list): \" + list);\n\n      var firstfactor = list.splice(list.length - 1, 1)[0];\n      var secondfactor = void 0;\n      var currentChar = this.parseIfWhitespace();\n      var negative = this.parseSign();\n      currentChar = this.getChar();\n\n      if (this.Evaluator.isTerm(currentChar)) {\n        secondfactor = this.parseTerm();\n      } else if (currentChar === \"\\\\\") {\n        var content = [];\n        this.parseCommand(content);\n        secondfactor = content[0];\n      } else if (currentChar === \"(\") {\n        var _content = [];\n        this.parseRoundBracketed(_content);\n        secondfactor = _content[0];\n        // makes multiplications shorter but kinda want the brackets to\n        // reduce in order user inputted their stuff\n        // secondfactor = content[0].reduceAndReturnIfPossible();\n        // } else if (c === \"-\") {\n      } else {\n          console.log(\"currently \" + this.currentlyParsed());\n          throw \"error in parseMultiplication. unknown secondfactor: \" + currentChar;\n        }\n      if (negative) {\n        secondfactor.switchSign();\n      }\n      var operation = new _MathOperation2.default(firstfactor, \"*\", secondfactor);\n      list.push(operation);\n    }\n  }, {\n    key: \"parseFraction\",\n    value: function parseFraction(list) {\n      Logcal.append(\"parseFraction(list): \" + list);\n\n      var firstlist = [],\n          secondlist = [];\n\n      this.parseCurlyBracketed(firstlist);\n      this.parseCurlyBracketed(secondlist);\n\n      var firstfactor = firstlist[0].returnContentIfPossible();\n      var secondfactor = secondlist[0].returnContentIfPossible();\n      var operation = new _MathOperation2.default(firstfactor, \"/\", secondfactor);\n      list.push(operation);\n    }\n  }, {\n    key: \"parseCurlyBracketed\",\n    value: function parseCurlyBracketed(list) {\n      Logcal.append(\"parseCurlyBracketed(list): \" + list);\n      this.parseIfChar(\"{\");\n      var content = this.parseToChar(\"}\");\n      var bracketed = new _MathBracketed2.default(content);\n      list.push(bracketed);\n    }\n  }, {\n    key: \"parseRoundBracketed\",\n    value: function parseRoundBracketed(list) {\n      Logcal.append(\"parseRoundBracketed(list): \" + list);\n      this.parseIfChar(\"(\"); // consuming the \"(\"\n      var bracketed = new _MathBracketed2.default(this.parseToChar(\")\"));\n      bracketed.setExponent(this.parseIfExponent());\n      if (this.getChar() === \"'\") {\n        Logcal.append(\"Transforming Probability into complement\");\n        this.parseChar();\n        bracketed.setExponent(new _MathSymbol2.default(\"mathsf{c}\"));\n      }\n      // check if ! is found after ) => factorial\n      if (this.parseIfChar(\"!\")) {\n        bracketed = new _MathFactorial2.default(bracketed);\n      }\n      list.push(bracketed);\n    }\n  }, {\n    key: \"createMultiplicationFromList\",\n    value: function createMultiplicationFromList(list) {\n      var second = list.splice(list.length - 1, 1)[0];\n      var first = list.splice(list.length - 1, 1)[0];\n      var mult = new _MathOperation2.default(first, \"*\", second);\n      list.push(mult);\n    }\n  }, {\n    key: \"parseProbability\",\n    value: function parseProbability() {\n      Logcal.append(\"parseToProbability():\");\n      var probability = void 0,\n          varlist = [];\n\n      this.parseIfChar(\"P\"); // consuming the \"P\"\n      this.parseCommand(varlist, false); // parsing content between brackets P( <-> )\n      // this.parseBracketed(varlist);\n      var bracketed = varlist[0];\n      probability = new _MathProbability2.default(bracketed.content);\n      probability.setExponent(bracketed.exponent);\n      return probability;\n    }\n  }, {\n    key: \"parseBinomial\",\n    value: function parseBinomial(list) {\n      Logcal.append(\"parseToBinomial(list): \" + list);\n      this.parseIfChar(\"{\");\n      var upper = void 0,\n          lower = void 0,\n          firstlist = this.parseToChar(\"}\");\n\n      upper = firstlist.length > 1 ? new _MathBracketed2.default(firstlist) : firstlist[0];\n\n      this.parseIfChar(\"{\");\n      var secondlist = this.parseToChar(\"}\");\n\n      lower = secondlist.length > 1 ? new _MathBracketed2.default(secondlist) : secondlist[0];\n\n      var binomial = new _MathBinomial2.default(upper, lower);\n      binomial.setExponent(this.parseIfExponent());\n      list.push(binomial);\n      return list;\n    }\n  }, {\n    key: \"addAlphaCharToVariables\",\n    value: function addAlphaCharToVariables(alphaChar) {\n      this.variables[alphaChar] ? this.variables[alphaChar]++ : this.variables[alphaChar] = 1;\n    }\n  }, {\n    key: \"parseChar\",\n    value: function parseChar() {\n      this.index++;\n      return this.index < this.input.length ? this.input.charAt(this.index) : \"\\\\\\\\\";\n    }\n  }, {\n    key: \"parseIfChar\",\n    value: function parseIfChar(requiredChar) {\n      return this.input.charAt(this.index) === requiredChar ? this.parseChar() : \"\";\n    }\n  }, {\n    key: \"parseSign\",\n    value: function parseSign() {\n      var negative = false;\n      while (this.Evaluator.isSign(this.getChar())) {\n        negative = this.getChar() === \"-\" ? !negative : negative;\n        this.parseChar();\n      }\n      Logcal.append(\"parseSign(): RETURN negative \" + negative);\n      return negative;\n    }\n  }, {\n    key: \"parseIfWhitespace\",\n    value: function parseIfWhitespace() {\n      while (this.Evaluator.isWhitespace(this.input.charAt(this.index)) && this.index < this.input.length) {\n        this.index++;\n      }\n      return this.input.charAt(this.index);\n    }\n  }, {\n    key: \"getLastChar\",\n    value: function getLastChar(index) {\n      while (this.Evaluator.isWhitespace(this.input.charAt(index)) && index < 0) {\n        index--;\n      }\n      return this.input.charAt(index);\n    }\n  }, {\n    key: \"getChar\",\n    value: function getChar() {\n      return this.index < this.input.length ? this.input.charAt(this.index) : \"\\\\\\\\\";\n    }\n  }, {\n    key: \"isNext\",\n    value: function isNext(latex) {\n      return this.input.length > this.index + latex.length + 1 && this.input.substring(this.index + 1, this.index + 1 + latex.length) === latex;\n    }\n  }, {\n    key: \"currentlyParsed\",\n    value: function currentlyParsed() {\n      return this.input.slice(0, this.index);\n    }\n  }]);\n\n  return LatexParser;\n}();\n\nexports.default = LatexParser;\n\n},{\"../math-components/basic/MathBracketed\":6,\"../math-components/basic/MathEquation\":7,\"../math-components/basic/MathOperation\":8,\"../math-components/basic/MathSymbol\":9,\"../math-components/basic/MathTerm\":10,\"../math-components/probability/MathBinomial\":11,\"../math-components/probability/MathFactorial\":12,\"../math-components/probability/MathProbability\":13,\"../utility_services/Logger\":18,\"../utility_services/Logmon\":19,\"./Evaluator\":14}],16:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Formulator = exports.Formulator = function () {\n  function Formulator() {\n    _classCallCheck(this, Formulator);\n\n    this.formulas = [];\n  }\n\n  _createClass(Formulator, [{\n    key: \"getFormulaByName\",\n    value: function getFormulaByName(name) {}\n  }]);\n\n  return Formulator;\n}();\n\nexports.default = new Formulator();\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\r\n * Id generator for creating unique ids\r\n */\n\nvar IdGenerator = exports.IdGenerator = function () {\n  function IdGenerator() {\n    _classCallCheck(this, IdGenerator);\n\n    this.nextid = 0;\n  }\n\n  _createClass(IdGenerator, [{\n    key: \"nextId\",\n    value: function nextId() {\n      return this.nextid++;\n    }\n  }]);\n\n  return IdGenerator;\n}();\n\nexports.default = new IdGenerator();\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Formulator = require(\"./Formulator\");\n\nvar _Formulator2 = _interopRequireDefault(_Formulator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Logger = exports.Logger = function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n\n    this.log = [];\n    this.message = \"\";\n    this.equation = null;\n  }\n\n  _createClass(Logger, [{\n    key: \"setEquation\",\n    value: function setEquation(equation) {\n      this.log = [];\n      this.message = \"\";\n      this.equation = equation;\n    }\n  }, {\n    key: \"resetLogs\",\n    value: function resetLogs() {\n      this.log = [];\n      this.message = \"\";\n    }\n  }, {\n    key: \"setMessage\",\n    value: function setMessage(msg) {\n      this.message = msg;\n    }\n    // pushStepWithLatex\n\n  }, {\n    key: \"createLatex\",\n    value: function createLatex(name, latex) {\n      this.log.push({\n        latex: latex,\n        stepName: name,\n        formula: \"\"\n      });\n    }\n    // pushStep\n\n  }, {\n    key: \"newLatex\",\n    value: function newLatex(name) {\n      this.log.push({\n        latex: this.equation.toLatex(),\n        stepName: name,\n        formula: \"\"\n      });\n    }\n    // pushStepWithFormula\n\n  }, {\n    key: \"newLatexWithFormula\",\n    value: function newLatexWithFormula(name, formulaName, variation) {\n      var formula = _Formulator2.default.getFormulaByName(formulaName);\n      if ((typeof formula === \"undefined\" ? \"undefined\" : _typeof(formula)) === \"object\") {\n        name += \"\\nUsing formula $\" + formula.variations[variation].latex + \"$\";\n      }\n      this.log.push({\n        latex: this.equation.toLatex(),\n        stepName: name,\n        formula: formula\n      });\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.default = new Logger();\n\n},{\"./Formulator\":16}],19:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = exports.Logmon = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _performanceNow = require(\"performance-now\");\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Logmon = exports.Logmon = function () {\n  function Logmon(windowRef) {\n    _classCallCheck(this, Logmon);\n\n    this.loggers = [];\n    this.window = windowRef;\n  }\n\n  _createClass(Logmon, [{\n    key: \"createLogger\",\n    value: function createLogger(name) {\n      this.loggers.push(new Logger(name));\n      this.window[name] = this.loggers[this.loggers.length - 1];\n      return this.loggers[this.loggers.length - 1];\n    }\n  }, {\n    key: \"createLoggerWithOptions\",\n    value: function createLoggerWithOptions(name, testing, consoling) {\n      var logger = new Logger(name);\n      logger.testing = testing;\n      logger.consoling = consoling;\n      this.loggers.push(logger);\n      this.window[name] = this.loggers[this.loggers.length - 1];\n      return this.loggers[this.loggers.length - 1];\n    }\n  }, {\n    key: \"getLogger\",\n    value: function getLogger(name) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.loggers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var logger = _step.value;\n\n          if (logger.name === name) {\n            return logger;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.loggers.map(function (logger) {\n        console.log(\"\", logger);\n      });\n    }\n  }, {\n    key: \"disableLoggers\",\n    value: function disableLoggers() {\n      this.loggers.map(function (logger) {\n        logger.testing = false;\n      });\n    }\n  }, {\n    key: \"enableLoggers\",\n    value: function enableLoggers() {\n      this.loggers.map(function (logger) {\n        logger.testing = true;\n      });\n    }\n  }]);\n\n  return Logmon;\n}();\n\nvar Logger = exports.Logger = function () {\n  function Logger(name) {\n    _classCallCheck(this, Logger);\n\n    this.name = name;\n    this.size = 5000;\n\n    this.log = [];\n    this.currentIndent = \"\";\n    this.indent = \"--- \";\n\n    this.timer = {};\n\n    this.testRunning = \"\";\n    this.testLevel = 0;\n    this.testing = true;\n    this.consoling = true;\n  }\n\n  _createClass(Logger, [{\n    key: \"setTestLevel\",\n    value: function setTestLevel(level) {\n      this.testLevel = level;\n    }\n  }, {\n    key: \"testRun\",\n    value: function testRun(what) {\n      this.testRunning = what;\n    }\n  }, {\n    key: \"resetLogs\",\n    value: function resetLogs() {\n      this.log = [];\n      this.currentIndent = \"\";\n    }\n  }, {\n    key: \"timerStart\",\n    value: function timerStart(where) {\n      if (this.testing) {\n        this.timer[where] = (0, _performanceNow2.default)();\n      }\n    }\n  }, {\n    key: \"timerEnd\",\n    value: function timerEnd(where) {\n      if (this.testing) {\n        var timed = (0, _performanceNow2.default)() - this.timer[where];\n        if (this.consoling) {\n          console.log(this.currentIndent + where + \" done in time \" + timed + \"ms\");\n        }\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(string) {\n      if (this.testing) {\n        var logged = this.currentIndent + string;\n        if (this.consoling) {\n          console.log(logged);\n        }\n        if (this.log.length === this.size) {\n          this.log.splice(0, 1);\n        }\n        this.log.push(logged);\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(string) {\n      if (this.testing || this.testRunning.length !== 0) {\n        var asString = \"\";\n        for (var i = 0; i < arguments.length; i++) {\n          asString += arguments[i].toString();\n        }\n        if (!this.testing && this.testRunning.length !== 0) {\n          if (string.indexOf(this.testRunning) !== -1) {\n            this.testing = true;\n          } else {\n            return;\n          }\n        }\n        var logged = this.currentIndent + string;\n        if (this.consoling) {\n          console.log(logged);\n          // console.log(\"arguments size \" + arguments.length);\n          // console.log(arguments);\n        }\n        if (this.log.length === this.size) {\n          this.log.splice(0, 1);\n        }\n        this.log.push(logged);\n        this.currentIndent += this.indent;\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end(string) {\n      if (this.testing) {\n        if (this.testRunning.length !== 0) {\n          if (string.indexOf(this.testRunning) !== -1) {\n            this.testing = false;\n            this.testRunning = \"\";\n          }\n        }\n        this.currentIndent = this.currentIndent.substring(0, this.currentIndent.length - this.indent.length);\n        var logged = this.currentIndent + string;\n        if (this.consoling) {\n          console.log(logged);\n        }\n        if (this.log.length === this.size) {\n          this.log.splice(0, 1);\n        }\n        this.log.push(logged);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      console.log(this.log.join(\"\\n\"));\n      console.log(\"--- TRACELOG(\" + this.name + \") size: \" + this.log.length + \" ---\");\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar mockWindow = {};\nvar logmon = new Logmon(mockWindow);\nlogmon.createLoggerWithOptions(\"Logdef\", false, true);\nlogmon.createLoggerWithOptions(\"Logcal\", false, true);\nexports.default = logmon;\n\n},{\"performance-now\":2}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = require(\"./Logger\");\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Logmon = require(\"./Logmon\");\n\nvar _Logmon2 = _interopRequireDefault(_Logmon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Logcal = _Logmon2.default.getLogger(\"Logcal\");\n\nvar Orderer = function () {\n  function Orderer() {\n    _classCallCheck(this, Orderer);\n\n    this.orders = [];\n    this.orderobj = {};\n    this.availableConversions = [];\n    this.underConversion = [];\n    this.locked = [];\n    // this.ordnung = {\n    //   \"Sum\": 0,\n    //   \"Probability\": -1,\n    //   \"Binomial\": -2,\n    //   \"Exponent\": -3,\n    //   \"Bracketed\": -4,\n    //   \"Factorial\": -5,\n    //   \"Operation\": -6,\n    //   \"Term\": -7\n    // };\n  }\n\n  _createClass(Orderer, [{\n    key: \"resetOrder\",\n    value: function resetOrder() {\n      this.orders = [];\n      this.orderobj = {};\n    }\n  }, {\n    key: \"setEquationOrder\",\n    value: function setEquationOrder(Equation) {\n      Logcal.append('Orderer setEquationOrder: Equation ' + Equation);\n      this.resetOrder();\n      for (var i = 0; i < Equation.leftside.length; i++) {\n        Equation.leftside[i].setOrder(0);\n        Equation.leftside[i].setParent(Equation);\n      }\n      for (var i = 0; i < Equation.rightside.length; i++) {\n        Equation.rightside[i].setOrder(0);\n        Equation.rightside[i].setParent(Equation);\n      }\n    }\n  }, {\n    key: \"setOrder\",\n    value: function setOrder(Location, Order, Component) {\n      Logcal.append('Orderer setOrder: Location ' + Location + ' Order ' + Order + ' Component ' + Component);\n      // console.log('component is ' + Component.type)\n      if (Object.prototype.toString.call(Component) === '[object Array]') {\n        for (var i = 0; i < Component.length; i++) {\n          Component[i].order = Order;\n          Component[i].parent = Location;\n          Component[i].setOrder(Order - 1);\n        }\n      } else {\n        Component.order = Order;\n        Component.parent = Location;\n        Order--;\n        Component.setOrder(Order);\n      }\n    }\n  }, {\n    key: \"registerComponent\",\n    value: function registerComponent(order, type, id) {\n      if (this.orders.indexOf(order) === -1) {\n        this.orders.push(order);\n        this.orders.sort(function (a, b) {\n          return b - a;\n        });\n      }\n      if (this.orderobj[type] && typeof this.orderobj[type] !== 'undefined') {\n        this.orderobj[type].depths.push({\n          order: order,\n          id: id\n        });\n      } else {\n        this.orderobj[type] = {\n          depths: [{\n            order: order,\n            id: id\n          }]\n        };\n      }\n    }\n  }, {\n    key: \"unregisterComponent\",\n    value: function unregisterComponent(type, id) {\n      for (var i = 0; i < this.orderobj[type].depths; i++) {\n        if (this.orderobj[type].depths[i].id === id) {\n          this.orderobj[type].depths.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"addUnderConversion\",\n    value: function addUnderConversion(list) {\n      Array.prototype.push.apply(this.underConversion, list);\n    }\n  }, {\n    key: \"isUnderConversion\",\n    value: function isUnderConversion(Component) {\n      // console.log('underConversion', this.underConversion);\n      // console.log('component', Component);\n      return this.underConversion.indexOf(Component.id) !== -1;\n    }\n  }, {\n    key: \"checkAndRemoveConversion\",\n    value: function checkAndRemoveConversion(type, Component) {\n      for (var i = 0; i < this.availableConversions.length; i++) {\n        if (this.availableConversions[i].type === type && this.availableConversions[i].id === Component.id) {\n          this.availableConversions.splice(i, 1);\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"getCurrentType\",\n    value: function getCurrentType() {\n      return this.nextInOrder;\n    }\n  }, {\n    key: \"getCurrentOrder\",\n    value: function getCurrentOrder(type) {\n      return this.equationOrderobj[type].maxdepth;\n    }\n  }, {\n    key: \"getCurrentTypesOrder\",\n    value: function getCurrentTypesOrder() {\n      return this.equationOrderobj[this.nextInOrder].maxdepth;\n    }\n\n    // this.getAndDecreaseCurrentOrder = function(type) {\n    // var currentorder = this.equationOrderobj[type].maxdepth;\n    // var indexOfOrder = this.equationOrderobj[type].depths.indexOf(currentorder);\n    // this.equationOrderobj[type].depths.splice(indexOfOrder, 1);\n    // if (this.equationOrderobj[type].depths.length === 0) {\n    // currentorder = -1;\n    // } else {\n    // currentorder = Math.max.apply(Math, this.equationOrderobj[type].depths);\n    // }\n    // this.equationOrderobj[type].maxdepth = currentorder;\n    // return currentorder;\n    // };\n\n    // this.getAndDecreaseCurrentOrder2 = function() {\n    // var currentorder = this.equationOrderobj[this.nextInOrder].maxdepth;\n    // var indexOfOrder = this.equationOrderobj[this.nextInOrder].depths.indexOf(currentorder);\n    // this.equationOrderobj[this.nextInOrder].depths.splice(indexOfOrder, 1);\n    // if (this.equationOrderobj[this.nextInOrder].depths.length === 0) {\n    // currentorder = -1;\n    // } else {\n    // currentorder = Math.max.apply(Math, this.equationOrderobj[this.nextInOrder].depths);\n    // }\n    // this.equationOrderobj[this.nextInOrder].maxdepth = currentorder;\n    // };\n\n  }]);\n\n  return Orderer;\n}();\n\nexports.default = new Orderer();\n\n},{\"./Logger\":18,\"./Logmon\":19}]},{},[4])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}